{"ast":null,"code":"var _jsxFileName = \"/Users/xichuang.chen/code/mycode/docker-react/src/component/Body.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Body extends Component {\n  constructor(props) {\n    super(props);\n    this.headerData = [\"date\", \"topic\", \"data\"];\n    this.state = {\n      data: null\n    };\n  }\n\n  async componentDidMount() {\n    // POST request using fetch with async/await\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      } // body: JSON.stringify({ title: 'React POST Request Example' })\n\n    };\n    console.log(\"get data from backend\");\n    const response = await fetch('http://localhost:8080/kafka/data', requestOptions);\n    console.log(\"response: \", response);\n    const data = await response.json();\n    console.log(\"data: \", data);\n    this.setState({\n      data: data\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"main-header visible\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"tabel\",\n          border: \"2\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"theads\",\n            onClick: this.sort,\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: this.headerData.map((head, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n                children: head\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: this.state.data && this.state.data.map((row, index) => {\n              console.log(\"row: \", row);\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: Object.getOwnPropertyNames(row).map(key1 => /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: row[key1]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 91\n                }, this))\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 41\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/xichuang.chen/code/mycode/docker-react/src/component/Body.js"],"names":["React","Component","Body","constructor","props","headerData","state","data","componentDidMount","requestOptions","method","headers","console","log","response","fetch","json","setState","render","sort","map","head","index","row","Object","getOwnPropertyNames","key1"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEA,eAAe,MAAMC,IAAN,SAAmBD,SAAnB,CAA6B;AACxCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,UAAL,GAAkB,CAAC,MAAD,EAAQ,OAAR,EAAgB,MAAhB,CAAlB;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE;AADG,KAAb;AAGH;;AAGsB,QAAjBC,iBAAiB,GAAG;AACtB;AACA,UAAMC,cAAc,GAAG;AACnBC,MAAAA,MAAM,EAAE,KADW;AAEnBC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFU,CAGnB;;AAHmB,KAAvB;AAKAC,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAD,EAAqCN,cAArC,CAA5B;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BC,QAA1B;AACA,UAAMP,IAAI,GAAG,MAAMO,QAAQ,CAACE,IAAT,EAAnB;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBN,IAAtB;AAEA,SAAKU,QAAL,CAAc;AAAEV,MAAAA,IAAI,EAAEA;AAAR,KAAd;AAEH;;AAEDW,EAAAA,MAAM,GAAG;AACL,wBACI;AAAQ,MAAA,SAAS,EAAC,qBAAlB;AAAA,6BACI;AAAA,+BACI;AAAO,UAAA,SAAS,EAAC,OAAjB;AAAyB,UAAA,MAAM,EAAC,GAAhC;AAAA,kCACI;AAAO,YAAA,SAAS,EAAC,QAAjB;AAA0B,YAAA,OAAO,EAAE,KAAKC,IAAxC;AAAA,mCACA;AAAA,wBAEQ,KAAKd,UAAL,CAAgBe,GAAhB,CAAoB,CAACC,IAAD,EAAMC,KAAN,kBAChB;AAAA,0BAAiBD;AAAjB,iBAASC,KAAT;AAAA;AAAA;AAAA;AAAA,sBADJ;AAFR;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,kBADJ,eASI;AAAA,sBAEI,KAAKhB,KAAL,CAAWC,IAAX,IAAmB,KAAKD,KAAL,CAAWC,IAAX,CAAgBa,GAAhB,CAAoB,CAACG,GAAD,EAAKD,KAAL,KAAa;AAChDV,cAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBU,GAArB;AACA,kCAAQ;AAAA,0BAEIC,MAAM,CAACC,mBAAP,CAA2BF,GAA3B,EAAgCH,GAAhC,CAAqCM,IAAD,iBAAU;AAAA,4BAAKH,GAAG,CAACG,IAAD;AAAR;AAAA;AAAA;AAAA;AAAA,wBAA9C;AAFJ,iBAASJ,KAAT;AAAA;AAAA;AAAA;AAAA,sBAAR;AAMH,aARkB;AAFvB;AAAA;AAAA;AAAA;AAAA,kBATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AA6BH;;AA1DuC","sourcesContent":["import React, {Component} from 'react';\n\nexport default class Body extends Component {\n    constructor(props) {\n        super(props);\n\n        this.headerData = [\"date\",\"topic\",\"data\"];\n        this.state = {\n            data: null\n        };\n    }\n\n\n    async componentDidMount() {\n        // POST request using fetch with async/await\n        const requestOptions = {\n            method: 'GET',\n            headers: { 'Content-Type': 'application/json' },\n            // body: JSON.stringify({ title: 'React POST Request Example' })\n        };\n        console.log(\"get data from backend\");\n        const response = await fetch('http://localhost:8080/kafka/data', requestOptions);\n        console.log(\"response: \", response);\n        const data = await response.json();\n        console.log(\"data: \", data);\n\n        this.setState({ data: data });\n\n    }\n\n    render() {\n        return (\n            <header className=\"main-header visible\">\n                <div>\n                    <table className='tabel' border=\"2\">\n                        <thead className='theads' onClick={this.sort}>\n                        <tr>\n                            {\n                                this.headerData.map((head,index)=>\n                                    <th key={index}>{head}</th> )\n                            }\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {\n                            this.state.data && this.state.data.map((row,index)=>{\n                                console.log(\"row: \", row);\n                                return (<tr key={index}>\n                                        {\n                                            Object.getOwnPropertyNames(row).map((key1) => <td>{row[key1]}</td>)\n                                        }\n                                    </tr>\n                                )\n                            })\n                        }\n                        </tbody>\n                    </table>\n                </div>\n            </header>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}